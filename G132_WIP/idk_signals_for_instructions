



how stack works:

stack pointer will hold address

stack definer will be split, first 22 bits will hold starting address, remaining 10 bits will hold the size
SSSS SSSS SSSS SSSS SSSS SSss ssss ssss
if size = 0 then it only has 1k of memory
max is 1023, equivalent to 1048576k, or aprox 1M, these are words not bytes



active low signals:
    load IR
    increment address
    




MOV:
    done
	load immediate into register
	if X = imm and Y = R
		enable falling edge
		write to register
		
	done
	load address into register
	if X = addr and Y = R
	    enable falling edge
	    falling delay
	    write temp register
	        if delay + condition
	            load IR
	            increment address
	            alt address
	                if not delay + condition
	                    falling delay
	                    write to register
	                    
	done         
    store register immediate
    if X = R and Y = imm
        enable falling edge
        falling delay
        if not delay
        write out
            if delay and condition
                rising delay
                
    done
    store register at address
    if X = R and Y = addr
        enable falling edge
        falling delay
        write temp register
            if delay and condition
                increment address
                write out
                falling delay
                alt address
                load IR
                
    done         
    transfer register to register
    if X = R and Y = R
        write to register
        
        
    
SWAP:
    done
    if X = R and Y = R
        write to register
        write to temp 
        temp data sel
        falling delay
            if delay and condition
                write to register
                register data sel temp
                register address sel
                falling delay
                load IR
                
                
JUMP:
    done
    if condition from VVVV is true and X = imm or addr and select bit is 0
        enable falling edge
        write to register
        register address sel PC 
        
    done
    if condition from VVVV is true and X = R and select bit is 0
        write to register
        register address sel PC
                
                
                
CALL:
    need to do stack before this
    if condition from VVVV is true and X = imm or addr and select bit is 1
        enable falling edge
        falling delay
        write to temp register
            if delay and condition
                load IR
                if stack start + size = stack pointer
                    set stack overflow
                else
                    increment stack pointer
                
                
       
       
    if condition from VVVV is true and X = R and select bit is 1         
                
                
                
                
                
STACK:

    PUSH:
    if condition from VVVV and X = R 
        if system stack 
            alt address system stack sel
            if system stack start + size = system stack pointer
                set system stack overflow
            else
                increment system stack pointer
                write out
        else
            alt address stack sel
            if stack start + size = stack pointer
                set stack overflow
            else
                increment stack pointer
                write out
            
    
    
    PULL:
    if condition from VVVV and X = R
        if system stack
            alt address system stack sel
            if system stack pointer = stack start
                set system stack underflow
            else
                decrement system stack pointer
                faling delay
        else
            alt address stack sel
            if stack pointer = stack start
                set stack underflow
            else
                decrement stack pointer
                falling delay
                
            if delay and condition
                rising delay
                write to register
                


ALU stuff:

    register or immediate:
    if condition
        alu OP code
        if both registers
            write to register
        if at least 1 is immediate
            enable falling edge
            if Y = imm
                falling delay
                
    
    register and address
    










interrupt handling:

    if any interrupt signal is set and load IR is 1 and instruction finished
        increment system stack pointer
        alt address system stack sel
        data out PC sel
        write out
        store interrup vector in PC
    
    
    
    
    
carry  
overflow
greater 
smaller 
positive
even    
zero          
    
0000 - unconditional
0001 - carry
0010 - overflow
0011 - zero
0100 - not zero
0101 - equal
0110 - not equal
0111 - greater
1000 - smaller
1001 - negative
1010 - positive
1011 - even
1100 - odd
1101 - reserbed
1110 - reserbed
1111 - reserbed
    
    
    
